{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\JHDS\\\\Projetos\\\\FullStack\\\\clocker\\\\components\\\\Auth\\\\index.js\";\nimport * as React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { firebaseClient, persistenceMode } from '../../config/firebase/client';\nconst AuthContext = /*#__PURE__*/React.createContext([{}, () => {}]);\nexport const logout = () => firebaseClient.auth().signOut();\nexport const login = async ({\n  email,\n  password\n}) => {\n  firebaseClient.auth().setPersistence(persistenceMode);\n\n  try {\n    await firebaseClient.auth().signInWithEmailAndPassword(email, password);\n    return firebaseClient.auth().currentUser;\n  } catch (error) {\n    console.log('LOGIN ERROR', error);\n  }\n};\nexport const signup = async ({\n  email,\n  password,\n  username\n}) => {\n  try {\n    await firebaseClient.auth().createUserWithEmailAndPassword(email, password);\n    const user = await login({\n      email,\n      password\n    });\n    const token = await user.getIdToken();\n    const {\n      data\n    } = await axios({\n      method: 'post',\n      url: '/api/profile',\n      data: {\n        username\n      },\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n  } catch (error) {\n    console.log('SIGNUP ERROR', error);\n  }\n};\nexport const useAuth = () => {\n  const {\n    0: auth\n  } = useContext(AuthContext);\n  return [auth, {\n    login,\n    logout,\n    signup\n  }];\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState({\n    loading: true,\n    user: false\n  });\n  useEffect(() => {\n    const unsubscribe = firebaseClient.auth().onAuthStateChanged(user => {\n      setAuth({\n        loading: false,\n        user\n      });\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [auth, setAuth],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["D:/JHDS/Projetos/FullStack/clocker/components/Auth/index.js"],"names":["React","useState","useEffect","useContext","axios","firebaseClient","persistenceMode","AuthContext","createContext","logout","auth","signOut","login","email","password","setPersistence","signInWithEmailAndPassword","currentUser","error","console","log","signup","username","createUserWithEmailAndPassword","user","token","getIdToken","data","method","url","headers","useAuth","AuthProvider","children","setAuth","loading","unsubscribe","onAuthStateChanged"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { firebaseClient, persistenceMode } from '../../config/firebase/client'\r\n\r\nconst AuthContext = React.createContext([{}, () => {}])\r\n\r\nexport const logout = () => firebaseClient.auth().signOut()\r\n\r\nexport const login = async ({ email, password }) => {\r\n    firebaseClient.auth().setPersistence(persistenceMode)\r\n    \r\ntry {\r\n      await firebaseClient.auth().signInWithEmailAndPassword(email, password)\r\n      return firebaseClient.auth().currentUser\r\n      \r\n    } catch (error){\r\n      console.log('LOGIN ERROR', error)\r\n    }\r\n}\r\n\r\nexport const signup = async ({ email, password, username}) => {\r\n    try {\r\n        await firebaseClient.auth().createUserWithEmailAndPassword(email, password)\r\n        const user = await login({ email, password })\r\n\r\n        const token = await user.getIdToken()\r\n\r\n        const { data } = await axios({\r\n          method: 'post',\r\n          url: '/api/profile',\r\n          data: { username },\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`  \r\n          },\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log('SIGNUP ERROR', error)\r\n    }\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const [auth] = useContext(AuthContext)\r\n    \r\n    return [auth, { login, logout, signup }]\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth ] = useState({\r\n        loading: true,\r\n        user: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebaseClient.auth().onAuthStateChanged(user => {\r\n          setAuth({\r\n            loading: false,\r\n            user\r\n          })\r\n        })\r\n\r\n        return () => unsubscribe()\r\n      }, [])\r\n\r\n    return ( \r\n        <AuthContext.Provider value={[auth, setAuth]}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}